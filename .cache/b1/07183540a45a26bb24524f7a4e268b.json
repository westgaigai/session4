{"id":"src/index.js","dependencies":[{"name":"/project/session4/package.json","includedInParent":true,"mtime":1661668431093}],"generated":{"js":"/**\n * const,let等の変数宣言\n *\n */\n// var val1 = \"var変数\";\n// console.log(val1);\n// // 　varを上書きしてみる\n// val1 = \"varを上書きしてみる\";\n// console.log(val1);\n// // var変数は再宣言可能\n// var val1 = \"varの再宣言\";\n// console.log(val1);\n// let val2 = \"let変数\";\n// console.log(val2);\n// // letは上書きが可能\n// val2 = \"let変数を上書き\";\n// console.log(val2);\n// letは再宣言ができない。\n// let val2 = \"letを再宣言\";\n// const val3 = \"const変数\"\n// console.log(val3)\n// const変数は上書き不可\n// val3 = \"const上書き\"\n// constは再宣言も不可\n// const val3 = \"const再宣言\"\n// constでもオブジェクトの中身は変更できる。\n// const val4 = {\n//   name: \"るみか\",\n//   age: \"20\"\n// }\n// val4.name = \"ゆうと\"\n// val4.addres =\"広島\"\n// console.log(val4)\n// const val5 = [\"dog\", \"cat\"]\n// val5[0] = \"犬\"\n// val5.push(\"bird\")\n// console.log(val5)\n\n/**\n * テンプレート文字列について\n */\n// const name = \"じゃけぇ\";\n// const age = 28;\n// 出力として私の名前はじゃけぇです。年齢は２８歳です。と出力させる。\n// 従来の方法 +で結合していた。。。。\n// const msg1 = \"私の名前は\" + name + \"です。年齢は\" + age + \"歳です。\";\n// console.log(msg1);\n// 新しい方法\n// const msg2 = `私の名前は${name}です。年齢は${age}歳です。`;\n// console.log(msg2)\n// アロー関数について\n// 従来の関数\n// function func1(str) {\n//   return str;\n// }\n// console.log(func1(\"test関数呼び出し\"));\n// // アロー関数\n// const func2 = str2 => str2;\n// //2つの引数を持つアロー関数\n// const func3 = (num1, num2) => {\n//   return num1 + num2;\n// }\n// console.log(func2(\"testアロー関数\"));\n// console.log(func3(10, 20))\n\n/**\n * 分割代入について\n */\n// const myProfile = {\n//   name: \"じゃけい\",\n//   age: 28\n// };\n// const message1 = `名前は${myProfile.name}です。年齢は${myProfile.age}歳です。`;\n// //  console.log(message1);\n// const { name, age } = myProfile;\n// const message2 = `名前は${name}です。年齢は${age}歳です。`;\n// console.log(message2)\n// const myProfile = [\"じゃけい\", 20];\n// // const message3 =`私の名前は${myProfile[0]}です。年齢は${myProfile[1]}歳です`\n// // console.log(message3);\n// const [name, age] = myProfile;\n// const message4 = `私の名前は${name}です。年齢は${age}歳です`;\n// console.log(message4);\n\n/**\n * デフォルト値、引数など\n */\n// const sayHello = (name=\"ゲスト\") =>{\n//   return console.log(`こんにちは${name}さん。`)\n// }\n// sayHello();\n\n/**\n * スプレット構文　...\n */\n// 配列の展開？？\n// const list1 = [1, 2]\n// // console.log(list1)\n// console.log(...list1);\n// const sum = (num1, num2) => console.log(num1 + num2);\n// sum(...list1)\n//展開の反対でまとめることができる？？\n// const list2 =[1, 2, 3, 4, 5]\n// // 分割代入の受け取りをスプレット構文で受け取れる？？\n// const [num1, num2, ...num3] = list2\n// console.log(num1)\n// console.log(num2)\n// console.log(num3)\n// リストの残りをスプレット構文に渡すことができる。\n// 配列のコピーや結合\n// const list3 = [10, 20];\n// const list4 = [30, 40];\n// mapやfirterを使った配列の処理\n// const nameArray1 = [\"田中\", \"山田\", \"ゆうと\"];\n// 従来はfor分で中身を取得していた\n// listの中身の数ぶん回していた。\n// for (let index = 0; index < nameArray1.length; index++) {\n//   console.log(`${index + 1}番目は${nameArray1[index]}です。`);\n// }\n// MAPを使ってやるとこう\n// const nameArray2 = nameArray1.map((name)=>{\n//   return name;\n// })\n// console.log(nameArray2)\n// mapで用を番号を取ろうとすると\n// 1つ目の引数は要素、２つ目の引数はインデックスを返してくる。らしい\n// nameArray1.map((name, index) => console.log(`${index}番目は${name}です`));\n// filterについて\n// ある条件に一致する要素を取得してくれる。\n// const numberArray1 = [1, 2, 3, 4, 5, 6];\n// const newNumberArray1 = numberArray1.filter((num) => {\n//   return num % 2 === 1;\n// });\n// console.log(newNumberArray1)\n// 実践的なMapの使い方\n// const newNameArray = nameArray1.map((name) =>{\n//   if (name ===\"ゆうと\"){\n//     return name;\n//   }\n//   else {\n//     return `${name}さん`;\n//   }\n// })\n// console.log(newNameArray)\n\n/**\n * 三項演算子について\n *\n */\n// 基本構文　条件? trueの時実行する処理 : falseの時実行する処理\n// const val1 = 1 > 0 ? true: false;\n// console.log(val1)\n// const num = 1300;\n// // toLocalStringは４桁以上の数字に区切り位置をつけてくれるメソッド\n// // 文字列の数字は対象外\n// // typeofメソッドは変数の型をチェックしてくれるメソッド\n// const formattedNum = typeof num === \"number\" ? num.toLocaleString() : \"数値を入力してください\"\n// console.log(formattedNum)\n// 三項演算子をreturnに使ってみる\n// const checSum = (num1, num2) => {\n//   return num1 +num2>100 ? \"100を超えています\":\"100以下です\"\n// };\n// console.log(checSum(50,40))\n\n/**\n * 論理演算子の本当の意味を知ろう　|| && これらのこと\n */\n// const flag1 = true;\n// const flag2 = true;\n// ||または\n// if (flag1 || flag2) {\n//   console.log(\"1か2がtrueです\")\n// }\n// // ＆＆かつ\n// if (flag1 && flag2) {\n//   console.log(\"1も2もtrueです\")\n// }\n// 実はこいつらまたはやかつという意味ではないらしい。。。\nvar num = true;\nvar fee = num || \"金額未設定です\"; // console.log(fee)\n\nvar num2 = null;\nvar fee2 = num2 && \"何か設定されました\";\nconsole.log(fee2);"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"src/index.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"src/index.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"src/index.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"src/index.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"src/index.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"src/index.js","original":{"line":8,"column":0}},{"generated":{"line":8,"column":0},"source":"src/index.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":0},"source":"src/index.js","original":{"line":10,"column":0}},{"generated":{"line":10,"column":0},"source":"src/index.js","original":{"line":12,"column":0}},{"generated":{"line":11,"column":0},"source":"src/index.js","original":{"line":13,"column":0}},{"generated":{"line":12,"column":0},"source":"src/index.js","original":{"line":14,"column":0}},{"generated":{"line":13,"column":0},"source":"src/index.js","original":{"line":16,"column":0}},{"generated":{"line":14,"column":0},"source":"src/index.js","original":{"line":17,"column":0}},{"generated":{"line":15,"column":0},"source":"src/index.js","original":{"line":19,"column":0}},{"generated":{"line":16,"column":0},"source":"src/index.js","original":{"line":20,"column":0}},{"generated":{"line":17,"column":0},"source":"src/index.js","original":{"line":21,"column":0}},{"generated":{"line":18,"column":0},"source":"src/index.js","original":{"line":23,"column":0}},{"generated":{"line":19,"column":0},"source":"src/index.js","original":{"line":24,"column":0}},{"generated":{"line":20,"column":0},"source":"src/index.js","original":{"line":26,"column":0}},{"generated":{"line":21,"column":0},"source":"src/index.js","original":{"line":27,"column":0}},{"generated":{"line":22,"column":0},"source":"src/index.js","original":{"line":29,"column":0}},{"generated":{"line":23,"column":0},"source":"src/index.js","original":{"line":30,"column":0}},{"generated":{"line":24,"column":0},"source":"src/index.js","original":{"line":32,"column":0}},{"generated":{"line":25,"column":0},"source":"src/index.js","original":{"line":33,"column":0}},{"generated":{"line":26,"column":0},"source":"src/index.js","original":{"line":35,"column":0}},{"generated":{"line":27,"column":0},"source":"src/index.js","original":{"line":36,"column":0}},{"generated":{"line":28,"column":0},"source":"src/index.js","original":{"line":37,"column":0}},{"generated":{"line":29,"column":0},"source":"src/index.js","original":{"line":38,"column":0}},{"generated":{"line":30,"column":0},"source":"src/index.js","original":{"line":39,"column":0}},{"generated":{"line":31,"column":0},"source":"src/index.js","original":{"line":41,"column":0}},{"generated":{"line":32,"column":0},"source":"src/index.js","original":{"line":42,"column":0}},{"generated":{"line":33,"column":0},"source":"src/index.js","original":{"line":43,"column":0}},{"generated":{"line":34,"column":0},"source":"src/index.js","original":{"line":45,"column":0}},{"generated":{"line":35,"column":0},"source":"src/index.js","original":{"line":46,"column":0}},{"generated":{"line":36,"column":0},"source":"src/index.js","original":{"line":47,"column":0}},{"generated":{"line":37,"column":0},"source":"src/index.js","original":{"line":48,"column":0}},{"generated":{"line":39,"column":0},"source":"src/index.js","original":{"line":50,"column":0}},{"generated":{"line":40,"column":0},"source":"src/index.js","original":{"line":51,"column":0}},{"generated":{"line":41,"column":0},"source":"src/index.js","original":{"line":52,"column":0}},{"generated":{"line":42,"column":0},"source":"src/index.js","original":{"line":53,"column":0}},{"generated":{"line":43,"column":0},"source":"src/index.js","original":{"line":54,"column":0}},{"generated":{"line":44,"column":0},"source":"src/index.js","original":{"line":55,"column":0}},{"generated":{"line":45,"column":0},"source":"src/index.js","original":{"line":57,"column":0}},{"generated":{"line":46,"column":0},"source":"src/index.js","original":{"line":58,"column":0}},{"generated":{"line":47,"column":0},"source":"src/index.js","original":{"line":59,"column":0}},{"generated":{"line":48,"column":0},"source":"src/index.js","original":{"line":61,"column":0}},{"generated":{"line":49,"column":0},"source":"src/index.js","original":{"line":62,"column":0}},{"generated":{"line":50,"column":0},"source":"src/index.js","original":{"line":63,"column":0}},{"generated":{"line":51,"column":0},"source":"src/index.js","original":{"line":65,"column":0}},{"generated":{"line":52,"column":0},"source":"src/index.js","original":{"line":66,"column":0}},{"generated":{"line":53,"column":0},"source":"src/index.js","original":{"line":67,"column":0}},{"generated":{"line":54,"column":0},"source":"src/index.js","original":{"line":68,"column":0}},{"generated":{"line":55,"column":0},"source":"src/index.js","original":{"line":69,"column":0}},{"generated":{"line":56,"column":0},"source":"src/index.js","original":{"line":70,"column":0}},{"generated":{"line":57,"column":0},"source":"src/index.js","original":{"line":72,"column":0}},{"generated":{"line":58,"column":0},"source":"src/index.js","original":{"line":73,"column":0}},{"generated":{"line":59,"column":0},"source":"src/index.js","original":{"line":75,"column":0}},{"generated":{"line":60,"column":0},"source":"src/index.js","original":{"line":76,"column":0}},{"generated":{"line":61,"column":0},"source":"src/index.js","original":{"line":77,"column":0}},{"generated":{"line":62,"column":0},"source":"src/index.js","original":{"line":78,"column":0}},{"generated":{"line":63,"column":0},"source":"src/index.js","original":{"line":79,"column":0}},{"generated":{"line":64,"column":0},"source":"src/index.js","original":{"line":80,"column":0}},{"generated":{"line":66,"column":0},"source":"src/index.js","original":{"line":82,"column":0}},{"generated":{"line":67,"column":0},"source":"src/index.js","original":{"line":83,"column":0}},{"generated":{"line":68,"column":0},"source":"src/index.js","original":{"line":84,"column":0}},{"generated":{"line":69,"column":0},"source":"src/index.js","original":{"line":86,"column":0}},{"generated":{"line":70,"column":0},"source":"src/index.js","original":{"line":87,"column":0}},{"generated":{"line":71,"column":0},"source":"src/index.js","original":{"line":88,"column":0}},{"generated":{"line":72,"column":0},"source":"src/index.js","original":{"line":89,"column":0}},{"generated":{"line":73,"column":0},"source":"src/index.js","original":{"line":91,"column":0}},{"generated":{"line":74,"column":0},"source":"src/index.js","original":{"line":93,"column":0}},{"generated":{"line":75,"column":0},"source":"src/index.js","original":{"line":95,"column":0}},{"generated":{"line":76,"column":0},"source":"src/index.js","original":{"line":96,"column":0}},{"generated":{"line":77,"column":0},"source":"src/index.js","original":{"line":97,"column":0}},{"generated":{"line":78,"column":0},"source":"src/index.js","original":{"line":99,"column":0}},{"generated":{"line":79,"column":0},"source":"src/index.js","original":{"line":101,"column":0}},{"generated":{"line":80,"column":0},"source":"src/index.js","original":{"line":102,"column":0}},{"generated":{"line":81,"column":0},"source":"src/index.js","original":{"line":104,"column":0}},{"generated":{"line":82,"column":0},"source":"src/index.js","original":{"line":106,"column":0}},{"generated":{"line":83,"column":0},"source":"src/index.js","original":{"line":107,"column":0}},{"generated":{"line":85,"column":0},"source":"src/index.js","original":{"line":109,"column":0}},{"generated":{"line":86,"column":0},"source":"src/index.js","original":{"line":110,"column":0}},{"generated":{"line":87,"column":0},"source":"src/index.js","original":{"line":111,"column":0}},{"generated":{"line":88,"column":0},"source":"src/index.js","original":{"line":112,"column":0}},{"generated":{"line":89,"column":0},"source":"src/index.js","original":{"line":113,"column":0}},{"generated":{"line":90,"column":0},"source":"src/index.js","original":{"line":114,"column":0}},{"generated":{"line":91,"column":0},"source":"src/index.js","original":{"line":116,"column":0}},{"generated":{"line":93,"column":0},"source":"src/index.js","original":{"line":118,"column":0}},{"generated":{"line":94,"column":0},"source":"src/index.js","original":{"line":119,"column":0}},{"generated":{"line":95,"column":0},"source":"src/index.js","original":{"line":120,"column":0}},{"generated":{"line":96,"column":0},"source":"src/index.js","original":{"line":121,"column":0}},{"generated":{"line":97,"column":0},"source":"src/index.js","original":{"line":122,"column":0}},{"generated":{"line":98,"column":0},"source":"src/index.js","original":{"line":123,"column":0}},{"generated":{"line":99,"column":0},"source":"src/index.js","original":{"line":124,"column":0}},{"generated":{"line":100,"column":0},"source":"src/index.js","original":{"line":126,"column":0}},{"generated":{"line":101,"column":0},"source":"src/index.js","original":{"line":128,"column":0}},{"generated":{"line":102,"column":0},"source":"src/index.js","original":{"line":130,"column":0}},{"generated":{"line":103,"column":0},"source":"src/index.js","original":{"line":132,"column":0}},{"generated":{"line":104,"column":0},"source":"src/index.js","original":{"line":133,"column":0}},{"generated":{"line":105,"column":0},"source":"src/index.js","original":{"line":134,"column":0}},{"generated":{"line":106,"column":0},"source":"src/index.js","original":{"line":136,"column":0}},{"generated":{"line":107,"column":0},"source":"src/index.js","original":{"line":137,"column":0}},{"generated":{"line":108,"column":0},"source":"src/index.js","original":{"line":138,"column":0}},{"generated":{"line":109,"column":0},"source":"src/index.js","original":{"line":139,"column":0}},{"generated":{"line":110,"column":0},"source":"src/index.js","original":{"line":141,"column":0}},{"generated":{"line":111,"column":0},"source":"src/index.js","original":{"line":142,"column":0}},{"generated":{"line":112,"column":0},"source":"src/index.js","original":{"line":143,"column":0}},{"generated":{"line":113,"column":0},"source":"src/index.js","original":{"line":145,"column":0}},{"generated":{"line":114,"column":0},"source":"src/index.js","original":{"line":147,"column":0}},{"generated":{"line":115,"column":0},"source":"src/index.js","original":{"line":149,"column":0}},{"generated":{"line":116,"column":0},"source":"src/index.js","original":{"line":150,"column":0}},{"generated":{"line":117,"column":0},"source":"src/index.js","original":{"line":151,"column":0}},{"generated":{"line":118,"column":0},"source":"src/index.js","original":{"line":152,"column":0}},{"generated":{"line":119,"column":0},"source":"src/index.js","original":{"line":153,"column":0}},{"generated":{"line":120,"column":0},"source":"src/index.js","original":{"line":154,"column":0}},{"generated":{"line":121,"column":0},"source":"src/index.js","original":{"line":155,"column":0}},{"generated":{"line":122,"column":0},"source":"src/index.js","original":{"line":156,"column":0}},{"generated":{"line":123,"column":0},"source":"src/index.js","original":{"line":157,"column":0}},{"generated":{"line":124,"column":0},"source":"src/index.js","original":{"line":158,"column":0}},{"generated":{"line":125,"column":0},"source":"src/index.js","original":{"line":160,"column":0}},{"generated":{"line":126,"column":0},"source":"src/index.js","original":{"line":161,"column":0}},{"generated":{"line":127,"column":0},"source":"src/index.js","original":{"line":162,"column":0}},{"generated":{"line":128,"column":0},"source":"src/index.js","original":{"line":164,"column":0}},{"generated":{"line":129,"column":0},"source":"src/index.js","original":{"line":165,"column":0}},{"generated":{"line":130,"column":0},"source":"src/index.js","original":{"line":166,"column":0}},{"generated":{"line":131,"column":0},"source":"src/index.js","original":{"line":167,"column":0}},{"generated":{"line":132,"column":0},"source":"src/index.js","original":{"line":168,"column":0}},{"generated":{"line":133,"column":0},"source":"src/index.js","original":{"line":169,"column":0}},{"generated":{"line":134,"column":0},"source":"src/index.js","original":{"line":170,"column":0}},{"generated":{"line":135,"column":0},"source":"src/index.js","original":{"line":172,"column":0}},{"generated":{"line":136,"column":0},"source":"src/index.js","original":{"line":173,"column":0}},{"generated":{"line":137,"column":0},"source":"src/index.js","original":{"line":174,"column":0}},{"generated":{"line":138,"column":0},"source":"src/index.js","original":{"line":175,"column":0}},{"generated":{"line":139,"column":0},"source":"src/index.js","original":{"line":176,"column":0}},{"generated":{"line":140,"column":0},"source":"src/index.js","original":{"line":177,"column":0}},{"generated":{"line":141,"column":0},"source":"src/index.js","original":{"line":178,"column":0}},{"generated":{"line":142,"column":0},"source":"src/index.js","original":{"line":179,"column":0}},{"generated":{"line":143,"column":0},"source":"src/index.js","original":{"line":180,"column":0}},{"generated":{"line":144,"column":0},"source":"src/index.js","original":{"line":181,"column":0}},{"generated":{"line":146,"column":0},"source":"src/index.js","original":{"line":183,"column":0}},{"generated":{"line":147,"column":0},"source":"src/index.js","original":{"line":184,"column":0}},{"generated":{"line":148,"column":0},"source":"src/index.js","original":{"line":185,"column":0}},{"generated":{"line":149,"column":0},"source":"src/index.js","original":{"line":186,"column":0}},{"generated":{"line":150,"column":0},"source":"src/index.js","original":{"line":187,"column":0}},{"generated":{"line":151,"column":0},"source":"src/index.js","original":{"line":188,"column":0}},{"generated":{"line":152,"column":0},"source":"src/index.js","original":{"line":189,"column":0}},{"generated":{"line":153,"column":0},"source":"src/index.js","original":{"line":191,"column":0}},{"generated":{"line":154,"column":0},"source":"src/index.js","original":{"line":192,"column":0}},{"generated":{"line":155,"column":0},"source":"src/index.js","original":{"line":193,"column":0}},{"generated":{"line":156,"column":0},"source":"src/index.js","original":{"line":194,"column":0}},{"generated":{"line":157,"column":0},"source":"src/index.js","original":{"line":195,"column":0}},{"generated":{"line":158,"column":0},"source":"src/index.js","original":{"line":196,"column":0}},{"generated":{"line":159,"column":0},"source":"src/index.js","original":{"line":198,"column":0}},{"generated":{"line":160,"column":0},"source":"src/index.js","original":{"line":199,"column":0}},{"generated":{"line":161,"column":0},"source":"src/index.js","original":{"line":200,"column":0}},{"generated":{"line":162,"column":0},"source":"src/index.js","original":{"line":201,"column":0}},{"generated":{"line":163,"column":0},"source":"src/index.js","original":{"line":202,"column":0}},{"generated":{"line":165,"column":0},"source":"src/index.js","original":{"line":204,"column":0}},{"generated":{"line":166,"column":0},"source":"src/index.js","original":{"line":205,"column":0}},{"generated":{"line":167,"column":0},"source":"src/index.js","original":{"line":206,"column":0}},{"generated":{"line":168,"column":0},"source":"src/index.js","original":{"line":207,"column":0}},{"generated":{"line":169,"column":0},"source":"src/index.js","original":{"line":208,"column":0}},{"generated":{"line":170,"column":0},"source":"src/index.js","original":{"line":210,"column":0}},{"generated":{"line":171,"column":0},"source":"src/index.js","original":{"line":211,"column":0}},{"generated":{"line":172,"column":0},"source":"src/index.js","original":{"line":212,"column":0}},{"generated":{"line":173,"column":0},"source":"src/index.js","original":{"line":213,"column":0}},{"generated":{"line":174,"column":0},"source":"src/index.js","original":{"line":215,"column":0}},{"generated":{"line":175,"column":0},"source":"src/index.js","original":{"line":216,"column":0}},{"generated":{"line":176,"column":0},"source":"src/index.js","original":{"line":217,"column":0}},{"generated":{"line":177,"column":0},"source":"src/index.js","original":{"line":218,"column":0}},{"generated":{"line":178,"column":0},"source":"src/index.js","original":{"line":220,"column":0}},{"generated":{"line":179,"column":0},"source":"src/index.js","original":{"line":221,"column":0}},{"generated":{"line":179,"column":4},"source":"src/index.js","original":{"line":221,"column":6},"name":"num"},{"generated":{"line":179,"column":7},"source":"src/index.js","original":{"line":221,"column":9}},{"generated":{"line":179,"column":10},"source":"src/index.js","original":{"line":221,"column":12}},{"generated":{"line":179,"column":14},"source":"src/index.js","original":{"line":221,"column":0}},{"generated":{"line":180,"column":0},"source":"src/index.js","original":{"line":222,"column":0}},{"generated":{"line":180,"column":4},"source":"src/index.js","original":{"line":222,"column":6},"name":"fee"},{"generated":{"line":180,"column":7},"source":"src/index.js","original":{"line":222,"column":9}},{"generated":{"line":180,"column":10},"source":"src/index.js","original":{"line":222,"column":12},"name":"num"},{"generated":{"line":180,"column":13},"source":"src/index.js","original":{"line":222,"column":15}},{"generated":{"line":180,"column":17},"source":"src/index.js","original":{"line":222,"column":19}},{"generated":{"line":180,"column":26},"source":"src/index.js","original":{"line":222,"column":0}},{"generated":{"line":180,"column":28},"source":"src/index.js","original":{"line":223,"column":0}},{"generated":{"line":182,"column":0},"source":"src/index.js","original":{"line":225,"column":0}},{"generated":{"line":182,"column":4},"source":"src/index.js","original":{"line":225,"column":6},"name":"num2"},{"generated":{"line":182,"column":8},"source":"src/index.js","original":{"line":225,"column":10}},{"generated":{"line":182,"column":11},"source":"src/index.js","original":{"line":225,"column":13}},{"generated":{"line":182,"column":15},"source":"src/index.js","original":{"line":225,"column":0}},{"generated":{"line":183,"column":0},"source":"src/index.js","original":{"line":226,"column":0}},{"generated":{"line":183,"column":4},"source":"src/index.js","original":{"line":226,"column":6},"name":"fee2"},{"generated":{"line":183,"column":8},"source":"src/index.js","original":{"line":226,"column":10}},{"generated":{"line":183,"column":11},"source":"src/index.js","original":{"line":226,"column":13},"name":"num2"},{"generated":{"line":183,"column":15},"source":"src/index.js","original":{"line":226,"column":17}},{"generated":{"line":183,"column":19},"source":"src/index.js","original":{"line":226,"column":21}},{"generated":{"line":183,"column":30},"source":"src/index.js","original":{"line":226,"column":0}},{"generated":{"line":184,"column":0},"source":"src/index.js","original":{"line":227,"column":0},"name":"console"},{"generated":{"line":184,"column":7},"source":"src/index.js","original":{"line":227,"column":7}},{"generated":{"line":184,"column":8},"source":"src/index.js","original":{"line":227,"column":8},"name":"log"},{"generated":{"line":184,"column":11},"source":"src/index.js","original":{"line":227,"column":0}},{"generated":{"line":184,"column":12},"source":"src/index.js","original":{"line":227,"column":12},"name":"fee2"},{"generated":{"line":184,"column":16},"source":"src/index.js","original":{"line":227,"column":0}}],"sources":{"src/index.js":"/**\n * const,let等の変数宣言\n *\n */\n// var val1 = \"var変数\";\n// console.log(val1);\n\n// // 　varを上書きしてみる\n// val1 = \"varを上書きしてみる\";\n// console.log(val1);\n\n// // var変数は再宣言可能\n// var val1 = \"varの再宣言\";\n// console.log(val1);\n\n// let val2 = \"let変数\";\n// console.log(val2);\n\n// // letは上書きが可能\n// val2 = \"let変数を上書き\";\n// console.log(val2);\n\n// letは再宣言ができない。\n// let val2 = \"letを再宣言\";\n\n// const val3 = \"const変数\"\n// console.log(val3)\n\n// const変数は上書き不可\n// val3 = \"const上書き\"\n\n// constは再宣言も不可\n// const val3 = \"const再宣言\"\n\n// constでもオブジェクトの中身は変更できる。\n// const val4 = {\n//   name: \"るみか\",\n//   age: \"20\"\n// }\n\n// val4.name = \"ゆうと\"\n// val4.addres =\"広島\"\n// console.log(val4)\n\n// const val5 = [\"dog\", \"cat\"]\n// val5[0] = \"犬\"\n// val5.push(\"bird\")\n// console.log(val5)\n\n/**\n * テンプレート文字列について\n */\n// const name = \"じゃけぇ\";\n// const age = 28;\n// 出力として私の名前はじゃけぇです。年齢は２８歳です。と出力させる。\n\n// 従来の方法 +で結合していた。。。。\n// const msg1 = \"私の名前は\" + name + \"です。年齢は\" + age + \"歳です。\";\n// console.log(msg1);\n\n// 新しい方法\n// const msg2 = `私の名前は${name}です。年齢は${age}歳です。`;\n// console.log(msg2)\n\n// アロー関数について\n// 従来の関数\n// function func1(str) {\n//   return str;\n// }\n// console.log(func1(\"test関数呼び出し\"));\n\n// // アロー関数\n// const func2 = str2 => str2;\n\n// //2つの引数を持つアロー関数\n// const func3 = (num1, num2) => {\n//   return num1 + num2;\n// }\n// console.log(func2(\"testアロー関数\"));\n// console.log(func3(10, 20))\n\n/**\n * 分割代入について\n */\n\n// const myProfile = {\n//   name: \"じゃけい\",\n//   age: 28\n// };\n\n// const message1 = `名前は${myProfile.name}です。年齢は${myProfile.age}歳です。`;\n\n// //  console.log(message1);\n\n// const { name, age } = myProfile;\n// const message2 = `名前は${name}です。年齢は${age}歳です。`;\n// console.log(message2)\n\n// const myProfile = [\"じゃけい\", 20];\n\n// // const message3 =`私の名前は${myProfile[0]}です。年齢は${myProfile[1]}歳です`\n// // console.log(message3);\n\n// const [name, age] = myProfile;\n\n// const message4 = `私の名前は${name}です。年齢は${age}歳です`;\n// console.log(message4);\n\n/**\n * デフォルト値、引数など\n */\n// const sayHello = (name=\"ゲスト\") =>{\n//   return console.log(`こんにちは${name}さん。`)\n// }\n\n// sayHello();\n\n/**\n * スプレット構文　...\n */\n// 配列の展開？？\n// const list1 = [1, 2]\n// // console.log(list1)\n// console.log(...list1);\n\n// const sum = (num1, num2) => console.log(num1 + num2);\n\n// sum(...list1)\n\n//展開の反対でまとめることができる？？\n\n// const list2 =[1, 2, 3, 4, 5]\n// // 分割代入の受け取りをスプレット構文で受け取れる？？\n// const [num1, num2, ...num3] = list2\n\n// console.log(num1)\n// console.log(num2)\n// console.log(num3)\n// リストの残りをスプレット構文に渡すことができる。\n\n// 配列のコピーや結合\n// const list3 = [10, 20];\n// const list4 = [30, 40];\n\n// mapやfirterを使った配列の処理\n\n// const nameArray1 = [\"田中\", \"山田\", \"ゆうと\"];\n\n// 従来はfor分で中身を取得していた\n// listの中身の数ぶん回していた。\n// for (let index = 0; index < nameArray1.length; index++) {\n//   console.log(`${index + 1}番目は${nameArray1[index]}です。`);\n// }\n// MAPを使ってやるとこう\n// const nameArray2 = nameArray1.map((name)=>{\n//   return name;\n// })\n// console.log(nameArray2)\n\n// mapで用を番号を取ろうとすると\n// 1つ目の引数は要素、２つ目の引数はインデックスを返してくる。らしい\n// nameArray1.map((name, index) => console.log(`${index}番目は${name}です`));\n\n// filterについて\n// ある条件に一致する要素を取得してくれる。\n// const numberArray1 = [1, 2, 3, 4, 5, 6];\n// const newNumberArray1 = numberArray1.filter((num) => {\n//   return num % 2 === 1;\n// });\n// console.log(newNumberArray1)\n\n// 実践的なMapの使い方\n// const newNameArray = nameArray1.map((name) =>{\n//   if (name ===\"ゆうと\"){\n//     return name;\n//   }\n//   else {\n//     return `${name}さん`;\n//   }\n// })\n// console.log(newNameArray)\n\n/**\n * 三項演算子について\n *\n */\n// 基本構文　条件? trueの時実行する処理 : falseの時実行する処理\n// const val1 = 1 > 0 ? true: false;\n// console.log(val1)\n\n// const num = 1300;\n// // toLocalStringは４桁以上の数字に区切り位置をつけてくれるメソッド\n// // 文字列の数字は対象外\n// // typeofメソッドは変数の型をチェックしてくれるメソッド\n// const formattedNum = typeof num === \"number\" ? num.toLocaleString() : \"数値を入力してください\"\n// console.log(formattedNum)\n\n// 三項演算子をreturnに使ってみる\n// const checSum = (num1, num2) => {\n//   return num1 +num2>100 ? \"100を超えています\":\"100以下です\"\n// };\n// console.log(checSum(50,40))\n\n/**\n * 論理演算子の本当の意味を知ろう　|| && これらのこと\n */\n// const flag1 = true;\n// const flag2 = true;\n\n// ||または\n// if (flag1 || flag2) {\n//   console.log(\"1か2がtrueです\")\n// }\n\n// // ＆＆かつ\n// if (flag1 && flag2) {\n//   console.log(\"1も2もtrueです\")\n// }\n\n// 実はこいつらまたはやかつという意味ではないらしい。。。\nconst num = true;\nconst fee = num || \"金額未設定です\";\n// console.log(fee)\n\nconst num2 = null;\nconst fee2 = num2 && \"何か設定されました\";\nconsole.log(fee2);\n"},"lineCount":null}},"error":null,"hash":"547b77a1bae63f978190c48547199aa0","cacheData":{"env":{}}}